/**
 * @module node-opcua-address-space.AlarmsAndConditions
 */
import { Certificate } from "node-opcua-crypto";
import { DateTime } from "node-opcua-basic-types";
import { VariantOptions } from "node-opcua-variant";
import { UACertificateExpirationAlarm_Base } from "node-opcua-nodeset-ua";
import { INamespace, UAObject } from "node-opcua-address-space-base";
import { InstantiateOffNormalAlarmOptions } from "./ua_off_normal_alarm_impl";
import { UASystemOffNormalAlarmImpl } from "./ua_system_off_normal_alarm_impl";
export interface UACertificateExpirationAlarmEx extends Omit<UACertificateExpirationAlarm_Base, "ackedState" | "activeState" | "confirmedState" | "enabledState" | "latchedState" | "limitState" | "outOfServiceState" | "shelvingState" | "silenceState" | "suppressedState"> {
    getExpirationDate(): DateTime;
    setExpirationDate(value: Date): void;
    getExpirationLimit(): number;
    setExpirationLimit(value: number): void;
    setCertificate(certificate: Certificate | null): void;
    getCertificate(): Certificate | null;
}
export declare interface UACertificateExpirationAlarmImpl extends UACertificateExpirationAlarmEx, UASystemOffNormalAlarmImpl {
}
/**
 * This UACertificateExpirationAlarm (SystemOffNormalAlarmType) is raised by the Server when the Serverâ€™s
 * Certificate is within the ExpirationLimit
 * of expiration. This alarm automatically returns to normal when the certificate is updated.
 */
export declare class UACertificateExpirationAlarmImpl extends UASystemOffNormalAlarmImpl implements UACertificateExpirationAlarmEx {
    static instantiate(namespace: INamespace, alarmType: "CertificateExpirationAlarmType", options: InstantiateOffNormalAlarmOptions, data?: Record<string, VariantOptions>): UACertificateExpirationAlarmImpl;
    getExpirationDate(): DateTime;
    setExpirationDate(expirationDate: Date): void;
    getExpirationLimit(): number;
    setExpirationLimit(value: number): void;
    getCertificate(): Certificate | null;
    setCertificate(certificate: Certificate | null): void;
    _post_initialize(): void;
}
export declare function promoteToCertificateExpirationAlarm(node: UAObject): UACertificateExpirationAlarmImpl;
